buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.+', changing: true
    }
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'

group 'br.com.finalcraft'
version '1.0.3'

minecraft {
    mappings channel: 'official', version: '1.16.5'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    flatDir {
        dirs 'libs'
        dirs 'C:/Users/Petrus/Desktop/Meus/workshop/workshop/PublicLibs/Bukkit'
        dirs 'C:/Users/Petrus/Desktop/Meus/workshop/workshop/PublicLibs'
    }
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }
    maven {
        url = "https://maven.petrus.dev/public"
    }
    maven { url 'https://maven.izzel.io/releases' } //ARCHLIGHT
}

dependencies {
    implementation 'io.izzel.arclight:arclight-api:1.3.0'

    minecraft 'net.minecraftforge:forge:1.16.5-36.2.34'

    compileOnly "br.com.finalcraft:EverNifeCore:2.0.4"

    compileOnly name: "mohist-1.16.5-api"
    compileOnly 'org.spigotmc:spigot-api:1.18.1-R0.1-SNAPSHOT'

    //Lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

publishing {
    repositories {
        maven {
            name = "PetrusRepo"
            url = "https://maven.petrus.dev/public"
            credentials {
                username = System.env.PETRUSMAVEN_ACTOR
                password = System.env.PETRUSMAVEN_TOKEN
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    publications {
        petrus(MavenPublication) {
            groupId = project.group
            from(components.java)
            pom.withXml {
                asNode().appendNode('url','https://petrus.dev')

                asNode().dependencies.'*'.each() {
                    it.parent().remove(it) //Remove all dependencies from pom file
                }
            }
        }
    }
}

task modifyModuleFile {
    doLast {
        print "Removing dependencies from module.json publication!"
        def moduleFile = file("${buildDir}/publications/petrus/module.json")
        if (moduleFile.exists()) {
            def moduleJson = new groovy.json.JsonSlurper().parseText(moduleFile.text)
            moduleJson.variants.each { variant ->
                variant.dependencies.removeAll { dep ->
                    true
                }
            }
            moduleFile.text = groovy.json.JsonOutput.toJson(moduleJson)
        }
    }
}


// Ensure the modifyModuleFile task runs after the publication has been generated
tasks.withType(AbstractPublishToMaven).configureEach {
    dependsOn modifyModuleFile
}
